package main

import (
	"encoding/json"
	"fmt"
	"net/http"
	"rss/internal/database"
	"time"

	"github.com/google/uuid"
)

// Post Create feed hanlder
func (cfg *apiConfig) handlerFeedsCreate(w http.ResponseWriter, r *http.Request, user database.User) {
	type parameters struct {
		Name string `json = "name"`
		Url  string `json = "url"`
	}
	//parsing
	decoder := json.NewDecoder(r.Body)

	params := parameters{}
	err := decoder.Decode(&params)
	if err != nil {
		respondWithError(w, 400, fmt.Sprintf("Error parsing JSON: %s", err))
		return
	}
	// if no err, now we hace access to databe to create user
	// the CreateUser method is generated by sqlc and you find it users.sql.go
	feed, err := cfg.DB.CreateFeed(r.Context(), database.CreateFeedParams{
		ID:        uuid.New(),
		CreatedAt: time.Now().UTC(),
		UpdatedAt: time.Now().UTC(),
		Name:      params.Name,
		Url:       params.Url,
		UserID:    user.ID,
	})
	if err != nil {
		respondWithError(w, 400, fmt.Sprintf("Error creatin user: %s", err))
		return
	}

	respondWithJSON(w, 201, feed)
}
